{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// MAIN //\n\n/**\n* Invokes a function until a test condition is true.\n*\n* @param {Function} predicate - function which indicates whether to continue invoking a function\n* @param {Function} fcn - function to invoke\n* @param {Callback} done - callback to invoke upon completion\n* @param {*} [thisArg] - execution context for the invoked function\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n*\n* @example\n* function predicate( i, clbk ) {\n*     clbk( null, i >= 5 );\n* }\n*\n* function fcn( i, next ) {\n*     setTimeout( onTimeout, i );\n*     function onTimeout() {\n*         console.log( 'beep: %d', i );\n*         next();\n*     }\n* }\n*\n* function done( error ) {\n*     if ( error ) {\n*         throw error;\n*     }\n* }\n*\n* untilAsync( predicate, fcn, done );\n*/\nfunction untilAsync( predicate, fcn, done, thisArg ) {\n\tvar args;\n\tvar idx;\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( '1Rp3c', predicate ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( '1Rp2H', fcn ) );\n\t}\n\tif ( !isFunction( done ) ) {\n\t\tthrow new TypeError( format( '1Rp3N', done ) );\n\t}\n\targs = [];\n\tidx = 0;\n\tpredicate( idx, onPredicate );\n\n\t/**\n\t* Callback invoked upon a predicate result.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {boolean} result - predicate result\n\t* @returns {void}\n\t*/\n\tfunction onPredicate( error, result ) {\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tif ( !result ) {\n\t\t\treturn fcn.call( thisArg, idx, next );\n\t\t}\n\t\tif ( args.length ) {\n\t\t\targs.unshift( null ); // error argument\n\t\t}\n\t\tdone.apply( null, args );\n\t}\n\n\t/**\n\t* Callback invoked upon completion of a provided function.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {...*} results - function results\n\t* @returns {void}\n\t*/\n\tfunction next( error ) {\n\t\tvar i;\n\t\tif ( error ) {\n\t\t\treturn done( error );\n\t\t}\n\t\tidx += 1;\n\n\t\t// Cache the most recent results...\n\t\tif ( arguments.length > 1 ) {\n\t\t\targs = new Array( arguments.length-1 );\n\t\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\t\targs[ i-1 ] = arguments[ i ];\n\t\t\t}\n\t\t}\n\t\t// Run the test condition:\n\t\tpredicate( idx, onPredicate );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default untilAsync;\n"],"names":["untilAsync","predicate","fcn","done","thisArg","args","idx","isFunction","TypeError","format","onPredicate","error","result","length","unshift","apply","call","next","i","arguments","Array"],"mappings":";;8LA4DA,SAASA,EAAYC,EAAWC,EAAKC,EAAMC,GAC1C,IAAIC,EACAC,EACJ,IAAMC,EAAYN,GACjB,MAAM,IAAIO,UAAWC,EAAQ,QAASR,IAEvC,IAAMM,EAAYL,GACjB,MAAM,IAAIM,UAAWC,EAAQ,QAASP,IAEvC,IAAMK,EAAYJ,GACjB,MAAM,IAAIK,UAAWC,EAAQ,QAASN,IAcvC,SAASO,EAAaC,EAAOC,GAC5B,OAAKD,EACGR,EAAMQ,GAERC,GAGDP,EAAKQ,QACTR,EAAKS,QAAS,WAEfX,EAAKY,MAAO,KAAMV,IALVH,EAAIc,KAAMZ,EAASE,EAAKW,EAMhC,CAUD,SAASA,EAAMN,GACd,IAAIO,EACJ,GAAKP,EACJ,OAAOR,EAAMQ,GAKd,GAHAL,GAAO,EAGFa,UAAUN,OAAS,EAEvB,IADAR,EAAO,IAAIe,MAAOD,UAAUN,OAAO,GAC7BK,EAAI,EAAGA,EAAIC,UAAUN,OAAQK,IAClCb,EAAMa,EAAE,GAAMC,UAAWD,GAI3BjB,EAAWK,EAAKI,EAChB,CAjDDL,EAAO,GAEPJ,EADAK,EAAM,EACUI,EAgDjB"}